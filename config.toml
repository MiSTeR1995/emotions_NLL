# ---------------------------
# Основные настройки проекта
# ---------------------------
split = "train"               # "train", "dev", "test"
base_dir = "E:\\MELD"         # Корневая директория, где лежат данные

# Пути к данным (используются в config_loader.py)
csv_path = "{base_dir}\\MELD.Raw\\meld_{split}_labels.csv"
wav_dir = "{base_dir}\\wavs\\{split}"
video_dir = "{base_dir}\\MELD.Raw\\{split}_splits"

# ---------------------------
# Список модальностей и эмоций
# ---------------------------
modalities = ["audio"]
emotion_columns = ["neutral", "happy", "sad", "anger", "surprise", "disgust", "fear"]

# ---------------------------
# DataLoader параметры
# ---------------------------
[dataloader]
batch_size = 1
num_workers = 0
shuffle = true

# ---------------------------
# Аудио
# ---------------------------
[audio]
sample_rate = 16000           # Целевая частота дискретизации
wav_length = 4                # Целевая длина (в секундах) для аудио

[audio_saving]
save_processed_audio = false
audio_output_dir = "{base_dir}\\output_wavs"

# ---------------------------
# Whisper и текст
# ---------------------------
[text]
# Если "csv", то мы стараемся брать текст из CSV, если там есть
# (поле text_column). Если нет - тогда Whisper (если нужно).
source = "csv"
text_column = "text"
whisper_model = "base"
max_text_tokens = 25

# Указываем, где запускать Whisper: "cuda" (GPU) или "cpu"
whisper_device = "cuda"

# Если для dev/test в CSV нет текста, нужно ли всё же вызывать Whisper?
use_whisper_for_nontrain_if_no_text = true

# ---------------------------
# Параметры для тренировки
# ---------------------------
[train]
# Если указать random_seed, мы фиксируем seed => воспроизводимые результаты
random_seed = 42 #  <=0 - рандомная выборка будет каждый раз
subset_size = 50 # Если subset_size = 0 или subset_size не указан, значит используем весь датасет без ограничений.
merge_probability = 0.2 # процент семплирования коротких файлов.
