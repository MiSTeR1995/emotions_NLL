import torch
import torchvision.io as io
import os

try:
    import av
except ImportError:
    av = None

class VideoProcessor:
    """–ö–ª–∞—Å—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ."""

    def __init__(self, frame_size=(224, 224), num_frames=16):
        self.frame_size = frame_size
        self.num_frames = num_frames

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ PyAV
        if av is None:
            print("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: PyAV –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í–∏–¥–µ–æ –Ω–µ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è.")

    def load_video(self, path):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∏–¥–µ–æ—Ñ–∞–π–ª."""
        if av is None:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞: PyAV –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ.")
            return None

        if not os.path.exists(path):
            print(f"‚ö†Ô∏è –§–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {path}")
            return None

        try:
            video, audio, info = io.read_video(path, pts_unit="sec")  # üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º pts_unit="sec"
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ {path}: {e}")
            return None

        # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–µ num_frames –∫–∞–¥—Ä–æ–≤ (–µ—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –ø–∞–¥–¥–∏–º)
        if video.shape[0] < self.num_frames:
            pad_frames = self.num_frames - video.shape[0]
            pad = torch.zeros((pad_frames, *video.shape[1:]))
            video = torch.cat([video, pad], dim=0)
        else:
            video = video[:self.num_frames]

        return video
